// AtlEventServer.idl : IDL source for AtlEventServer
//

// This file will be processed by the MIDL tool to
// produce the type library (AtlEventServer.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(8415BFDB-4B13-4009-BD40-0E84DDA8AAD4),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface ICalculator : IDispatch{
	[id(1), helpstring("Sum from a to z")] HRESULT Sum([in] LONG a, [in] LONG z, [out, retval] LONG* rlt);
	[id(2), helpstring("Divide x by y")] HRESULT Div([in] LONG x, [in] LONG y, [out, retval] LONG* rlt);
};
[
	uuid(57113D47-D09B-4C5D-8723-35EF0AEF42C5),
	version(1.0),
]
library AtlEventServerLib
{
	importlib("stdole2.tlb");
	[
		uuid(ED2E8B90-F826-43DA-8E33-A9DC0FE0F75B)		
	]
	dispinterface _ICalculatorEvents
	{
		properties:
		methods:
			[id(1), helpstring("Report status message")] HRESULT EventStatus(BSTR msg);
			[id(2), helpstring("Report progress")] HRESULT EventProgress([in] LONG idx, [in] LONG val);
	};
	[
		uuid(032238B8-B79B-4A16-BE17-E2BB1E2AD592)		
	]
	coclass Calculator
	{
		[default] interface ICalculator;
		[default, source] dispinterface _ICalculatorEvents;
	};
};

